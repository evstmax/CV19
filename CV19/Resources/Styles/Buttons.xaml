<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.com/icons/">



    <Style x:Key="BtnBase" TargetType="ButtonBase" >
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BtnBase}"/>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource BtnBase}"/>

    <Style x:Key="PrimaryBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <Style x:Key="DangerBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="Red"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>

    <DropShadowEffect x:Key="ShadowDepth1" ShadowDepth="1"></DropShadowEffect>

    <ControlTemplate x:Key="CustomButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" 
                                  Focusable="False" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  Margin="{TemplateBinding Padding}" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Blue"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkBlue"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CheckButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    SnapsToDevicePixels="true">

            <DockPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       Margin="{TemplateBinding Padding}">
                <fa:ImageAwesome Height="12" Icon="Solid_Check" Foreground="LightGreen" Margin="0,0,5,0" Effect="{StaticResource ShadowDepth1}"/>
                <ContentPresenter x:Name="contentPresenter" 
                                  Focusable="False" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Blue"/>
                <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                <Setter Property="Foreground" Value="White"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkBlue"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="RemoveButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" 
                    CornerRadius="5"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    SnapsToDevicePixels="true">

            <DockPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                       Margin="{TemplateBinding Padding}">
                <fa:ImageAwesome Height="12" Icon="Solid_Times" Foreground="DarkRed" Margin="0,0,5,0" Effect="{StaticResource ShadowDepth1}"/>
                <ContentPresenter x:Name="contentPresenter" 
                                  Focusable="False" 
                                  RecognizesAccessKey="True" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="White"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                <Setter Property="Foreground"  Value="Red"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="WhiteSmoke"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>-->
                <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource CustomButtonTemplate}"/>
    </Style>

    <Style x:Key="CheckButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}"/>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderBrush" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource RemoveButtonTemplate}"/>
    </Style>

</ResourceDictionary>